---
import ProjectPreview from "../components/ProjectPreview.astro";
import { Octokit } from "octokit";

const octokit = new Octokit({});

const raw_data = await octokit.request("GET /users/{username}/repos", {
  username: "NicolasTOISON",
  type: "owner",
  headers: {
    accept: "application/vnd.github+json",
    authorization: "Bearer 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",
    "X-GitHub-Api-Version": "2022-11-28",
  },
  sort: "pushed",
  direction: "desc",
});

type Projects = {
  title: string;
  description: string;
  category?: string;
  slug: string;
};

const projects = raw_data.data.map<any>((data: any) => {
  if (data.topics === undefined) {
    return {
      title: data.name,
      description: data.description,
      slug: data.html_url,
    };
  } else {
    return {
      title: data.name,
      description: data.description,
      category: data.topics[0],
      slug: data.html_url,
    };
  }
});
---

<div class="project-list">
  {
    projects
      .slice(0, 5)
      .map((project: Projects) => (
        <ProjectPreview
          name={project.title}
          excerpt={project.description}
          category={project.category}
          slug={project.slug}
        />
      ))
  }
</div>
<style>
  .project-list {
    display: grid;
    grid-auto-flow: row;
    grid-template-columns: repeat(3, 1fr);
    row-gap: 2rem;
  }
  @media only screen and (min-device-width: 320px) and (max-device-width: 480px) {
    .project-list {
      display: grid;
      grid-auto-flow: column;
      grid-template-columns: 1fr;
      grid-template-rows: repeat(5, 1fr);
    }
  }

  @media only screen and (min-device-width: 481px) and (max-device-width: 768px) {
  }

  @media only screen and (min-device-width: 769px) and (max-device-width: 1024px) {
  }

  /* Desktops and laptops ----------- */
  @media only screen and (min-device-width: 1025px) {
  }
</style>
